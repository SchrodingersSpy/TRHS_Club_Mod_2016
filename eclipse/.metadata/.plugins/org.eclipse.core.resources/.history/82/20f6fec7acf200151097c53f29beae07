package epidemiccraft.blocks;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;

import com.sun.xml.internal.stream.Entity;

public class ModelAutoclave extends ModelBase
{
  //fields
    ModelRenderer MainBody;
    ModelRenderer Wall1;
    ModelRenderer Wall2;
    ModelRenderer Wall3;
    ModelRenderer Wall4;
    ModelRenderer Leg;
    ModelRenderer Leg1;
    ModelRenderer Leg2;
    ModelRenderer Leg3;
    ModelRenderer Leg4;
    ModelRenderer Seal1;
    ModelRenderer Seal2;
    ModelRenderer SealBig1;
    ModelRenderer Seal3;
    ModelRenderer Seal4;
    ModelRenderer SealBig2;
    ModelRenderer Lid1;
    ModelRenderer Lid2;
    ModelRenderer Handle1;
    ModelRenderer Handle2;
    ModelRenderer Handle3;
    ModelRenderer Guage1;
    ModelRenderer Guage2;
    ModelRenderer Knob1;
    ModelRenderer Knob2;
    ModelRenderer Knob3;
    ModelRenderer Knob4;
    ModelRenderer Knob5;
    ModelRenderer Knob6;
    ModelRenderer Knob7;
    ModelRenderer Knob8;
    ModelRenderer Knob9;
    ModelRenderer Knob10;
    ModelRenderer Knob11;
    ModelRenderer Knob12;
  
  public ModelAutoclave()
  {
    textureWidth = 100;
    textureHeight = 100;
    
      MainBody = new ModelRenderer(this, 0, 0);
      MainBody.addBox(0F, 0F, 0F, 10, 16, 10);
      MainBody.setRotationPoint(-5F, 7F, -5F);
      MainBody.setTextureSize(100, 100);
      MainBody.mirror = true;
      setRotation(MainBody, 0F, 0F, 0F);
      Wall1 = new ModelRenderer(this, 0, 26);
      Wall1.addBox(0F, 0F, 0F, 6, 16, 1);
      Wall1.setRotationPoint(-3F, 7F, -6F);
      Wall1.setTextureSize(100, 100);
      Wall1.mirror = true;
      setRotation(Wall1, 0F, 0F, 0F);
      Wall2 = new ModelRenderer(this, 0, 43);
      Wall2.addBox(0F, 0F, 0F, 1, 16, 6);
      Wall2.setRotationPoint(-6F, 7F, -3F);
      Wall2.setTextureSize(100, 100);
      Wall2.mirror = true;
      setRotation(Wall2, 0F, 0F, 0F);
      Wall3 = new ModelRenderer(this, 14, 26);
      Wall3.addBox(0F, 0F, 0F, 6, 16, 1);
      Wall3.setRotationPoint(-3F, 7F, 5F);
      Wall3.setTextureSize(100, 100);
      Wall3.mirror = true;
      setRotation(Wall3, 0F, 0F, 0F);
      Wall4 = new ModelRenderer(this, 14, 43);
      Wall4.addBox(0F, 0F, 0F, 1, 16, 6);
      Wall4.setRotationPoint(5F, 7F, -3F);
      Wall4.setTextureSize(100, 100);
      Wall4.mirror = true;
      setRotation(Wall4, 0F, 0F, 0F);
      Leg = new ModelRenderer(this, 28, 26);
      Leg.addBox(1F, 0F, 0.2F, 2, 1, 1);
      Leg.setRotationPoint(-6F, 22F, -7F);
      Leg.setTextureSize(100, 100);
      Leg.mirror = true;
      setRotation(Leg, 0F, -0.7853982F, 0F);
      Leg = new ModelRenderer(this, 36, 26);
      Leg.addBox(0F, 0F, 0.2F, 1, 2, 1);
      Leg.setRotationPoint(-6F, 22F, -7F);
      Leg.setTextureSize(100, 100);
      Leg.mirror = true;
      setRotation(Leg, 0F, -0.7853982F, 0F);
      Leg = new ModelRenderer(this, 28, 26);
      Leg.addBox(0F, 0F, 0.2F, 3, 1, 1);
      Leg.setRotationPoint(4F, 22F, -5F);
      Leg.setTextureSize(100, 100);
      Leg.mirror = true;
      setRotation(Leg, 0F, 0.7853982F, 0F);
      Leg = new ModelRenderer(this, 36, 26);
      Leg.addBox(0F, 0F, 0F, 1, 2, 1);
      Leg.setRotationPoint(6.3F, 22F, -7F);
      Leg.setTextureSize(100, 100);
      Leg.mirror = true;
      setRotation(Leg, 0F, -0.7853982F, 0F);
      Leg = new ModelRenderer(this, 28, 28);
      Leg.addBox(0F, 0F, 0F, 2, 2, 2);
      Leg.setRotationPoint(-1F, 22F, 5F);
      Leg.setTextureSize(100, 100);
      Leg.mirror = true;
      setRotation(Leg, 0F, 0F, 0F);
      Seal = new ModelRenderer(this, 40, 0);
      Seal.addBox(0F, 0F, 0F, 8, 1, 14);
      Seal.setRotationPoint(-4F, 6F, -7F);
      Seal.setTextureSize(100, 100);
      Seal.mirror = true;
      setRotation(Seal, 0F, 0F, 0F);
      Seal = new ModelRenderer(this, 40, 15);
      Seal.addBox(0F, 0F, 0F, 14, 1, 8);
      Seal.setRotationPoint(-7F, 6F, -4F);
      Seal.setTextureSize(100, 100);
      Seal.mirror = true;
      setRotation(Seal, 0F, 0F, 0F);
      SealBig = new ModelRenderer(this, 40, 24);
      SealBig.addBox(0F, 0F, 0F, 12, 1, 12);
      SealBig.setRotationPoint(-6F, 6F, -6F);
      SealBig.setTextureSize(100, 100);
      SealBig.mirror = true;
      setRotation(SealBig, 0F, 0F, 0F);
      Seal = new ModelRenderer(this, 40, 37);
      Seal.addBox(0F, 0F, 0F, 8, 1, 14);
      Seal.setRotationPoint(-4F, 5F, -7F);
      Seal.setTextureSize(100, 100);
      Seal.mirror = true;
      setRotation(Seal, 0F, 0F, 0F);
      Seal = new ModelRenderer(this, 40, 52);
      Seal.addBox(0F, 0F, 0F, 14, 1, 8);
      Seal.setRotationPoint(-7F, 5F, -4F);
      Seal.setTextureSize(100, 100);
      Seal.mirror = true;
      setRotation(Seal, 0F, 0F, 0F);
      SealBig = new ModelRenderer(this, 40, 61);
      SealBig.addBox(0F, 0F, 0F, 12, 1, 12);
      SealBig.setRotationPoint(-6F, 5F, -6F);
      SealBig.setTextureSize(100, 100);
      SealBig.mirror = true;
      setRotation(SealBig, 0F, 0F, 0F);
      Lid = new ModelRenderer(this, 0, 65);
      Lid.addBox(0F, 0F, 0F, 10, 1, 10);
      Lid.setRotationPoint(-5F, 4F, -5F);
      Lid.setTextureSize(100, 100);
      Lid.mirror = true;
      setRotation(Lid, 0F, 0F, 0F);
      Lid = new ModelRenderer(this, 0, 76);
      Lid.addBox(0F, 0F, 0F, 6, 1, 6);
      Lid.setRotationPoint(-3F, 3F, -3F);
      Lid.setTextureSize(100, 100);
      Lid.mirror = true;
      setRotation(Lid, 0F, 0F, 0F);
      Handle = new ModelRenderer(this, 28, 62);
      Handle.addBox(0F, 0F, 0F, 4, 1, 2);
      Handle.setRotationPoint(-2F, 1F, -1F);
      Handle.setTextureSize(100, 100);
      Handle.mirror = true;
      setRotation(Handle, 0F, 0F, 0F);
      Handle = new ModelRenderer(this, 28, 57);
      Handle.addBox(0F, 0F, 0F, 1, 3, 2);
      Handle.setRotationPoint(1F, 1F, -1F);
      Handle.setTextureSize(100, 100);
      Handle.mirror = true;
      setRotation(Handle, 0F, 0F, 0F);
      Handle = new ModelRenderer(this, 28, 57);
      Handle.addBox(0F, 0F, 0F, 1, 3, 2);
      Handle.setRotationPoint(-2F, 1F, -1F);
      Handle.setTextureSize(100, 100);
      Handle.mirror = true;
      setRotation(Handle, 0F, 0F, 0F);
      Guage = new ModelRenderer(this, 28, 53);
      Guage.addBox(0F, 0F, 0F, 3, 3, 1);
      Guage.setRotationPoint(-6F, 0F, -2F);
      Guage.setTextureSize(100, 100);
      Guage.mirror = true;
      setRotation(Guage, 0F, 0F, 0F);
      Guage = new ModelRenderer(this, 36, 53);
      Guage.addBox(0F, 0F, 0F, 1, 3, 1);
      Guage.setRotationPoint(-5F, 2F, -2F);
      Guage.setTextureSize(100, 100);
      Guage.mirror = true;
      setRotation(Guage, 0F, 0F, 0F);
      Knob = new ModelRenderer(this, 0, 0);
      Knob.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob.setRotationPoint(4.9F, 4F, -5.9F);
      Knob.setTextureSize(100, 100);
      Knob.mirror = true;
      setRotation(Knob, 0F, 0F, 0F);
      Knob = new ModelRenderer(this, 0, 0);
      Knob.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob.setRotationPoint(-6.9F, 4F, -2F);
      Knob.setTextureSize(100, 100);
      Knob.mirror = true;
      setRotation(Knob, 0F, 0F, 0F);
      Knob = new ModelRenderer(this, 0, 0);
      Knob.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob.setRotationPoint(-2F, 4F, -6.9F);
      Knob.setTextureSize(100, 100);
      Knob.mirror = true;
      setRotation(Knob, 0F, 0F, 0F);
      Knob = new ModelRenderer(this, 0, 0);
      Knob.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob.setRotationPoint(5.9F, 4F, 1F);
      Knob.setTextureSize(100, 100);
      Knob.mirror = true;
      setRotation(Knob, 0F, 0F, 0F);
      Knob = new ModelRenderer(this, 0, 0);
      Knob.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob.setRotationPoint(4.9F, 4F, 4.9F);
      Knob.setTextureSize(100, 100);
      Knob.mirror = true;
      setRotation(Knob, 0F, 0F, 0F);
      Knob = new ModelRenderer(this, 0, 0);
      Knob.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob.setRotationPoint(-2F, 4F, 5.9F);
      Knob.setTextureSize(100, 100);
      Knob.mirror = true;
      setRotation(Knob, 0F, 0F, 0F);
      Knob = new ModelRenderer(this, 0, 0);
      Knob.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob.setRotationPoint(-5.9F, 4F, -5.9F);
      Knob.setTextureSize(100, 100);
      Knob.mirror = true;
      setRotation(Knob, 0F, 0F, 0F);
      Knob = new ModelRenderer(this, 0, 0);
      Knob.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob.setRotationPoint(1F, 4F, 5.9F);
      Knob.setTextureSize(100, 100);
      Knob.mirror = true;
      setRotation(Knob, 0F, 0F, 0F);
      Knob = new ModelRenderer(this, 0, 0);
      Knob.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob.setRotationPoint(-5.9F, 4F, 4.9F);
      Knob.setTextureSize(100, 100);
      Knob.mirror = true;
      setRotation(Knob, 0F, 0F, 0F);
      Knob = new ModelRenderer(this, 0, 0);
      Knob.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob.setRotationPoint(5.9F, 4F, -2F);
      Knob.setTextureSize(100, 100);
      Knob.mirror = true;
      setRotation(Knob, 0F, 0F, 0F);
      Knob = new ModelRenderer(this, 0, 0);
      Knob.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob.setRotationPoint(1F, 4F, -6.9F);
      Knob.setTextureSize(100, 100);
      Knob.mirror = true;
      setRotation(Knob, 0F, 0F, 0F);
      Knob = new ModelRenderer(this, 0, 0);
      Knob.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob.setRotationPoint(-6.9F, 4F, 1F);
      Knob.setTextureSize(100, 100);
      Knob.mirror = true;
      setRotation(Knob, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    MainBody.render(f5);
    Wall1.render(f5);
    Wall2.render(f5);
    Wall3.render(f5);
    Wall4.render(f5);
    Leg.render(f5);
    Leg.render(f5);
    Leg.render(f5);
    Leg.render(f5);
    Leg.render(f5);
    Seal.render(f5);
    Seal.render(f5);
    SealBig.render(f5);
    Seal.render(f5);
    Seal.render(f5);
    SealBig.render(f5);
    Lid.render(f5);
    Lid.render(f5);
    Handle.render(f5);
    Handle.render(f5);
    Handle.render(f5);
    Guage.render(f5);
    Guage.render(f5);
    Knob.render(f5);
    Knob.render(f5);
    Knob.render(f5);
    Knob.render(f5);
    Knob.render(f5);
    Knob.render(f5);
    Knob.render(f5);
    Knob.render(f5);
    Knob.render(f5);
    Knob.render(f5);
    Knob.render(f5);
    Knob.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5);
  }

}
