package epidemiccraft.blocks;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelAutoclave extends ModelBase
{
  //fields
    ModelRenderer MainBody;
    ModelRenderer Wall1;
    ModelRenderer Wall2;
    ModelRenderer Wall3;
    ModelRenderer Wall4;
    ModelRenderer Leg1;
    ModelRenderer Leg2;
    ModelRenderer Leg3;
    ModelRenderer Leg4;
    ModelRenderer Leg5;
    ModelRenderer Seal1;
    ModelRenderer Seal2;
    ModelRenderer SealBig1;
    ModelRenderer Seal3;
    ModelRenderer Seal4;
    ModelRenderer SealBig2;
    ModelRenderer Lid1;
    ModelRenderer Lid2;
    ModelRenderer Handle1;
    ModelRenderer Handle2;
    ModelRenderer Handle3;
    ModelRenderer Guage1;
    ModelRenderer Guage2;
    ModelRenderer Knob1;
    ModelRenderer Knob2;
    ModelRenderer Knob3;
    ModelRenderer Knob4;
    ModelRenderer Knob5;
    ModelRenderer Knob6;
    ModelRenderer Knob7;
    ModelRenderer Knob8;
    ModelRenderer Knob9;
    ModelRenderer Knob10;
    ModelRenderer Knob11;
    ModelRenderer Knob12;
  
  public ModelAutoclave()
  {
    textureWidth = 100;
    textureHeight = 100;
    
      MainBody = new ModelRenderer(this, 0, 0);
      MainBody.addBox(0F, 0F, 0F, 10, 16, 10);
      MainBody.setRotationPoint(-5F, 7F, -5F);
      MainBody.setTextureSize(100, 100);
      MainBody.mirror = true;
      setRotation(MainBody, 0F, 0F, 0F);
      Wall1 = new ModelRenderer(this, 0, 26);
      Wall1.addBox(0F, 0F, 0F, 6, 16, 1);
      Wall1.setRotationPoint(-3F, 7F, -6F);
      Wall1.setTextureSize(100, 100);
      Wall1.mirror = true;
      setRotation(Wall1, 0F, 0F, 0F);
      Wall2 = new ModelRenderer(this, 0, 43);
      Wall2.addBox(0F, 0F, 0F, 1, 16, 6);
      Wall2.setRotationPoint(-6F, 7F, -3F);
      Wall2.setTextureSize(100, 100);
      Wall2.mirror = true;
      setRotation(Wall2, 0F, 0F, 0F);
      Wall3 = new ModelRenderer(this, 14, 26);
      Wall3.addBox(0F, 0F, 0F, 6, 16, 1);
      Wall3.setRotationPoint(-3F, 7F, 5F);
      Wall3.setTextureSize(100, 100);
      Wall3.mirror = true;
      setRotation(Wall3, 0F, 0F, 0F);
      Wall4 = new ModelRenderer(this, 14, 43);
      Wall4.addBox(0F, 0F, 0F, 1, 16, 6);
      Wall4.setRotationPoint(5F, 7F, -3F);
      Wall4.setTextureSize(100, 100);
      Wall4.mirror = true;
      setRotation(Wall4, 0F, 0F, 0F);
      Leg1 = new ModelRenderer(this, 28, 26);
      Leg1.addBox(1F, 0F, 0.2F, 2, 1, 1);
      Leg1.setRotationPoint(-6F, 22F, -7F);
      Leg1.setTextureSize(100, 100);
      Leg1.mirror = true;
      setRotation(Leg1, 0F, -0.7853982F, 0F);
      Leg2 = new ModelRenderer(this, 36, 26);
      Leg2.addBox(0F, 0F, 0.2F, 1, 2, 1);
      Leg2.setRotationPoint(-6F, 22F, -7F);
      Leg2.setTextureSize(100, 100);
      Leg2.mirror = true;
      setRotation(Leg2, 0F, -0.7853982F, 0F);
      Leg3 = new ModelRenderer(this, 28, 26);
      Leg3.addBox(0F, 0F, 0.2F, 3, 1, 1);
      Leg3.setRotationPoint(4F, 22F, -5F);
      Leg3.setTextureSize(100, 100);
      Leg3.mirror = true;
      setRotation(Leg3, 0F, 0.7853982F, 0F);
      Leg4 = new ModelRenderer(this, 36, 26);
      Leg4.addBox(0F, 0F, 0F, 1, 2, 1);
      Leg4.setRotationPoint(6.3F, 22F, -7F);
      Leg4.setTextureSize(100, 100);
      Leg4.mirror = true;
      setRotation(Leg4, 0F, -0.7853982F, 0F);
      Leg5 = new ModelRenderer(this, 28, 28);
      Leg5.addBox(0F, 0F, 0F, 2, 2, 2);
      Leg5.setRotationPoint(-1F, 22F, 5F);
      Leg5.setTextureSize(100, 100);
      Leg5.mirror = true;
      setRotation(Leg5, 0F, 0F, 0F);
      Seal1 = new ModelRenderer(this, 40, 0);
      Seal1.addBox(0F, 0F, 0F, 8, 1, 14);
      Seal1.setRotationPoint(-4F, 6F, -7F);
      Seal1.setTextureSize(100, 100);
      Seal1.mirror = true;
      setRotation(Seal1, 0F, 0F, 0F);
      Seal2 = new ModelRenderer(this, 40, 15);
      Seal2.addBox(0F, 0F, 0F, 14, 1, 8);
      Seal2.setRotationPoint(-7F, 6F, -4F);
      Seal2.setTextureSize(100, 100);
      Seal2.mirror = true;
      setRotation(Seal2, 0F, 0F, 0F);
      SealBig1 = new ModelRenderer(this, 40, 24);
      SealBig1.addBox(0F, 0F, 0F, 12, 1, 12);
      SealBig1.setRotationPoint(-6F, 6F, -6F);
      SealBig1.setTextureSize(100, 100);
      SealBig1.mirror = true;
      setRotation(SealBig1, 0F, 0F, 0F);
      Seal3 = new ModelRenderer(this, 40, 37);
      Seal3.addBox(0F, 0F, 0F, 8, 1, 14);
      Seal3.setRotationPoint(-4F, 5F, -7F);
      Seal3.setTextureSize(100, 100);
      Seal3.mirror = true;
      setRotation(Seal3, 0F, 0F, 0F);
      Seal4 = new ModelRenderer(this, 40, 52);
      Seal4.addBox(0F, 0F, 0F, 14, 1, 8);
      Seal4.setRotationPoint(-7F, 5F, -4F);
      Seal4.setTextureSize(100, 100);
      Seal4.mirror = true;
      setRotation(Seal4, 0F, 0F, 0F);
      SealBig2 = new ModelRenderer(this, 40, 61);
      SealBig2.addBox(0F, 0F, 0F, 12, 1, 12);
      SealBig2.setRotationPoint(-6F, 5F, -6F);
      SealBig2.setTextureSize(100, 100);
      SealBig2.mirror = true;
      setRotation(SealBig2, 0F, 0F, 0F);
      Lid1 = new ModelRenderer(this, 0, 65);
      Lid1.addBox(0F, 0F, 0F, 10, 1, 10);
      Lid1.setRotationPoint(-5F, 4F, -5F);
      Lid1.setTextureSize(100, 100);
      Lid1.mirror = true;
      setRotation(Lid1, 0F, 0F, 0F);
      Lid2 = new ModelRenderer(this, 0, 76);
      Lid2.addBox(0F, 0F, 0F, 6, 1, 6);
      Lid2.setRotationPoint(-3F, 3F, -3F);
      Lid2.setTextureSize(100, 100);
      Lid2.mirror = true;
      setRotation(Lid2, 0F, 0F, 0F);
      Handle1 = new ModelRenderer(this, 28, 62);
      Handle1.addBox(0F, 0F, 0F, 4, 1, 2);
      Handle1.setRotationPoint(-2F, 1F, -1F);
      Handle1.setTextureSize(100, 100);
      Handle1.mirror = true;
      setRotation(Handle1, 0F, 0F, 0F);
      Handle2 = new ModelRenderer(this, 28, 57);
      Handle2.addBox(0F, 0F, 0F, 1, 3, 2);
      Handle2.setRotationPoint(1F, 1F, -1F);
      Handle2.setTextureSize(100, 100);
      Handle2.mirror = true;
      setRotation(Handle2, 0F, 0F, 0F);
      Handle3 = new ModelRenderer(this, 28, 57);
      Handle3.addBox(0F, 0F, 0F, 1, 3, 2);
      Handle3.setRotationPoint(-2F, 1F, -1F);
      Handle3.setTextureSize(100, 100);
      Handle3.mirror = true;
      setRotation(Handle3, 0F, 0F, 0F);
      Guage1 = new ModelRenderer(this, 28, 53);
      Guage1.addBox(0F, 0F, 0F, 3, 3, 1);
      Guage1.setRotationPoint(-6F, 0F, -2F);
      Guage1.setTextureSize(100, 100);
      Guage1.mirror = true;
      setRotation(Guage1, 0F, 0F, 0F);
      Guage2 = new ModelRenderer(this, 36, 53);
      Guage2.addBox(0F, 0F, 0F, 1, 3, 1);
      Guage2.setRotationPoint(-5F, 2F, -2F);
      Guage2.setTextureSize(100, 100);
      Guage2.mirror = true;
      setRotation(Guage2, 0F, 0F, 0F);
      Knob1 = new ModelRenderer(this, 0, 0);
      Knob1.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob1.setRotationPoint(4.9F, 4F, -5.9F);
      Knob1.setTextureSize(100, 100);
      Knob1.mirror = true;
      setRotation(Knob1, 0F, 0F, 0F);
      Knob2 = new ModelRenderer(this, 0, 0);
      Knob2.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob2.setRotationPoint(-6.9F, 4F, -2F);
      Knob2.setTextureSize(100, 100);
      Knob2.mirror = true;
      setRotation(Knob2, 0F, 0F, 0F);
      Knob3 = new ModelRenderer(this, 0, 0);
      Knob3.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob3.setRotationPoint(-2F, 4F, -6.9F);
      Knob3.setTextureSize(100, 100);
      Knob3.mirror = true;
      setRotation(Knob3, 0F, 0F, 0F);
      Knob4 = new ModelRenderer(this, 0, 0);
      Knob4.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob4.setRotationPoint(5.9F, 4F, 1F);
      Knob4.setTextureSize(100, 100);
      Knob4.mirror = true;
      setRotation(Knob4, 0F, 0F, 0F);
      Knob5 = new ModelRenderer(this, 0, 0);
      Knob5.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob5.setRotationPoint(4.9F, 4F, 4.9F);
      Knob5.setTextureSize(100, 100);
      Knob5.mirror = true;
      setRotation(Knob5, 0F, 0F, 0F);
      Knob6 = new ModelRenderer(this, 0, 0);
      Knob6.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob6.setRotationPoint(-2F, 4F, 5.9F);
      Knob6.setTextureSize(100, 100);
      Knob6.mirror = true;
      setRotation(Knob6, 0F, 0F, 0F);
      Knob7 = new ModelRenderer(this, 0, 0);
      Knob7.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob7.setRotationPoint(-5.9F, 4F, -5.9F);
      Knob7.setTextureSize(100, 100);
      Knob7.mirror = true;
      setRotation(Knob7, 0F, 0F, 0F);
      Knob8 = new ModelRenderer(this, 0, 0);
      Knob8.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob8.setRotationPoint(1F, 4F, 5.9F);
      Knob8.setTextureSize(100, 100);
      Knob8.mirror = true;
      setRotation(Knob8, 0F, 0F, 0F);
      Knob9 = new ModelRenderer(this, 0, 0);
      Knob9.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob9.setRotationPoint(-5.9F, 4F, 4.9F);
      Knob9.setTextureSize(100, 100);
      Knob9.mirror = true;
      setRotation(Knob9, 0F, 0F, 0F);
      Knob10 = new ModelRenderer(this, 0, 0);
      Knob10.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob10.setRotationPoint(5.9F, 4F, -2F);
      Knob10.setTextureSize(100, 100);
      Knob10.mirror = true;
      setRotation(Knob10, 0F, 0F, 0F);
      Knob11 = new ModelRenderer(this, 0, 0);
      Knob11.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob11.setRotationPoint(1F, 4F, -6.9F);
      Knob11.setTextureSize(100, 100);
      Knob11.mirror = true;
      setRotation(Knob11, 0F, 0F, 0F);
      Knob12 = new ModelRenderer(this, 0, 0);
      Knob12.addBox(0F, 0F, 0F, 1, 3, 1);
      Knob12.setRotationPoint(-6.9F, 4F, 1F);
      Knob12.setTextureSize(100, 100);
      Knob12.mirror = true;
      setRotation(Knob12, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    MainBody.render(f5);
    Wall1.render(f5);
    Wall2.render(f5);
    Wall3.render(f5);
    Wall4.render(f5);
    Leg1.render(f5);
    Leg2.render(f5);
    Leg3.render(f5);
    Leg4.render(f5);
    Leg5.render(f5);
    Seal1.render(f5);
    Seal2.render(f5);
    SealBig1.render(f5);
    Seal3.render(f5);
    Seal4.render(f5);
    SealBig2.render(f5);
    Lid1.render(f5);
    Lid2.render(f5);
    Handle1.render(f5);
    Handle2.render(f5);
    Handle3.render(f5);
    Guage1.render(f5);
    Guage2.render(f5);
    Knob1.render(f5);
    Knob2.render(f5);
    Knob3.render(f5);
    Knob4.render(f5);
    Knob5.render(f5);
    Knob6.render(f5);
    Knob7.render(f5);
    Knob8.render(f5);
    Knob9.render(f5);
    Knob10.render(f5);
    Knob11.render(f5);
    Knob12.render(f5);
  }
  
  public void renderModel
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
	    model.rotateAngleX = x;
	    model.rotateAngleY = y;
	    model.rotateAngleZ = z;
	  }
	  
	  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
	  {
	    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	  }

	}