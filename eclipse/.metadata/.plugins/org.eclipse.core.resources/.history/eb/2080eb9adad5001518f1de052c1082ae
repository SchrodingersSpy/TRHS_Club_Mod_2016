package epidemiccraft.blocks;

import java.util.Random;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import epidemiccraft.lib.Constants;
import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.IIcon;
import net.minecraft.util.MathHelper;
import net.minecraft.world.World;

public class Autoclave extends Block {

	@SideOnly(Side.CLIENT)
	private IIcon top;

	@SideOnly(Side.CLIENT)
	private IIcon front;
	
	private static boolean isBurning;
	private final boolean isBurning2;
	private final Random random = new Random();
	
	protected Autoclave(boolean isActive) {
		super(Material.iron);
		isBurning2 = isActive;
	}
	
	@SideOnly(Side.CLIENT)
	public void RegisterBlockIcons(IIconRegister iconregister){
		this.blockIcon = iconregister.registerIcon(Constants.MODID + ":AutoclaveSide");
		this.front = iconregister.registerIcon(this.isBurning2 ? Constants.MODID + ":AutoclaveActive" : Constants.MODID + ":AutoclaveInactive");
		this.top = iconregister.registerIcon(Constants.MODID + ":AutoclaveTop");
	}
	
	public IIcon getIcon(int side, int meta){
		if(side == 1){
			return top;
		} else if(side == 3){
			return front;
		} else{
			return this.blockIcon;
		}
	}
	
	public boolean onBlockActivated(World world, int x, int y, int z, EntityPlayer player, int par6, float par7, float par8, float par9){
		player.openGui(Constants.MODID, 0, world, x, y, z);
		return true;
	}
	
	public Item getItemDropped(int par1, Random random, int par3){
		return Item.getItemFromBlock(ModBlocks.Autoclave);
	}
	
	public Item getItem(World world, int par2, int par3, int par4){
		return Item.getItemFromBlock(ModBlocks.Autoclave);
	}
	
	@SideOnly(Side.CLIENT)
	public void onBlockAdded(World world, int x, int y, int z){
		super.onBlockAdded(world, x, y, z);
		this.direction(world, x, y, z);
	}
	
	private void direction(World world, int x, int y, int z){
		if(!world.isRemote){
			Block direction = world.getBlock(x, y, z - 1);
			Block direction1 = world.getBlock(x, y, z + 1);
			Block direction2 = world.getBlock(x - 1, y, z);
			Block direction3 = world.getBlock(x + 1, y, z);
			byte byte0 = 3;
			
			if(direction.func_149730_j() && direction.func_149730_j()){
				byte0 = 3;
			}
			if(direction1.func_149730_j() && direction1.func_149730_j()){
				byte0 = 2;
			}
			if(direction2.func_149730_j() && direction2.func_149730_j()){
				byte0 = 5;
			}
			if(direction3.func_149730_j() && direction3.func_149730_j()){
				byte0 = 4;
			}
			
			world.setBlockMetadataWithNotify(x, y, z, byte0, 2);
		}
	}
	
	public void onBlockPlacedBy(World world, int x, int y, int z, EntityLivingBase entity, ItemStack itemstack){
		int direction = MathHelper.floor_double((double)(entity.rotationYaw * 4.0F / 360.0F) + 0.5D) & 3;
	}
	
}



